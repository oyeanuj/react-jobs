{"version":3,"file":"react-jobs.js","sources":["../src/utils.js","../src/withJob.js","../src/createJobContext.js","../src/JobProvider.js"],"sourcesContent":["export function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component'\n}\n\nexport const isPromise = x =>\n  typeof x === 'object' && typeof x.then === 'function'\n\nexport const propsWithoutInternal = props => {\n  // eslint-disable-next-line no-unused-vars\n  const { jobInitState, onJobProcessed, ...rest } = props\n  return rest\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getDisplayName, isPromise, propsWithoutInternal } from './utils'\n\nconst validSSRModes = ['resolve', 'defer', 'boundary']\nconst neverWorkAgain = () => false\n\nexport default function withJob(config) {\n  if (typeof config !== 'object') {\n    throw new Error('You must provide a config object to withJob')\n  }\n\n  const {\n    work,\n    LoadingComponent,\n    ErrorComponent,\n    serverMode = 'resolve',\n    shouldWorkAgain = neverWorkAgain,\n    onlyUseWrappedComponent = false,\n  } = config\n\n  if (typeof work !== 'function') {\n    throw new Error('You must provide a work function to withJob')\n  }\n\n  if (validSSRModes.indexOf(serverMode) === -1) {\n    throw new Error('Invalid serverMode provided to asyncComponent')\n  }\n\n  const env = typeof window === 'undefined' ? 'node' : 'browser'\n\n  return function wrapWithJob(WrappedComponent) {\n    let id\n\n    class ComponentWithJob extends Component {\n      static displayName = `WithJob(${getDisplayName(WrappedComponent)})`\n\n      static contextTypes = {\n        jobs: PropTypes.shape({\n          getNextId: PropTypes.func.isRequired,\n          register: PropTypes.func.isRequired,\n          get: PropTypes.func.isRequired,\n          getRehydrate: PropTypes.func.isRequired,\n          removeRehydrate: PropTypes.func.isRequired,\n        }),\n        store: PropTypes.object,\n        intl: PropTypes.object,\n      }\n\n      constructor(props, context) {\n        super(props, context)\n\n        // Each instance needs it's own id as that is how we expect work to\n        // be executed.  It is not shared between element instances.\n        if (context.jobs) {\n          id = context.jobs.getNextId()\n        }\n      }\n\n      // @see react-async-bootstrapper\n      bootstrap() {\n        if (env === 'browser') {\n          // No logic for browser, just continue\n          return true\n        }\n\n        // node\n        return serverMode === 'defer' ? false : this.resolveWork(this.props)\n      }\n\n      componentWillMount() {\n        let result\n\n        if (this.context.jobs) {\n          result =\n            env === 'browser'\n              ? this.context.jobs.getRehydrate(id)\n              : this.context.jobs.get(id)\n        }\n\n        this.setState({\n          data: result ? result.data : null,\n          error: null,\n          completed: result != null,\n        })\n      }\n\n      componentDidMount() {\n        if (!this.state.completed) {\n          this.resolveWork(this.props)\n        }\n\n        if (this.context.jobs && env === 'browser') {\n          this.context.jobs.removeRehydrate(id)\n        }\n      }\n\n      componentWillUnmount() {\n        this.unmounted = true\n      }\n\n      componentWillReceiveProps(nextProps, nextContext) {\n        const { store, intl } = this.context\n        if (\n          shouldWorkAgain(\n            propsWithoutInternal(this.props),\n            propsWithoutInternal(nextProps),\n            this.getJobState(),\n            { store, intl },\n            { store: nextContext.store, intl: nextContext.intl },\n          )\n        ) {\n          this.resolveWork(nextProps)\n        }\n      }\n\n      resolveWork = props => {\n        let workDefinition\n\n        this.setState({ completed: false, data: null, error: null })\n        const { store, intl } = this.context\n\n        try {\n          workDefinition = work(props, { store, intl })\n        } catch (error) {\n          this.setState({ completed: true, error })\n          // Ensures bootstrap stops\n          return false\n        }\n\n        if (isPromise(workDefinition)) {\n          // Asynchronous result.\n          return workDefinition\n            .then(data => {\n              if (this.unmounted) {\n                return undefined\n              }\n              this.setState({ completed: true, data })\n              this.setJobContext(data)\n              // Ensures bootstrap continues\n              return true\n            })\n            .catch(error => {\n              if (this.unmounted) {\n                return undefined\n              }\n              if (env === 'browser') {\n                setTimeout(() => {\n                  if (!this.unmounted) {\n                    this.setState({ completed: true, error })\n                  }\n                }, 16)\n              } else {\n                // node\n                // We will at least log the error so that user isn't completely\n                // unaware of an error occurring.\n                // eslint-disable-next-line no-console\n                console.warn('Failed to resolve job')\n                // eslint-disable-next-line no-console\n                console.warn(error)\n              }\n              // Ensures bootstrap stops\n              return false\n            })\n        }\n\n        // Synchronous result.\n        this.setJobContext(workDefinition)\n\n        this.setState({ completed: true, data: workDefinition, error: null })\n\n        // Ensures bootstrap continues\n        return true\n      }\n\n      setJobContext = data => {\n        if (this.context.jobs) {\n          this.context.jobs.register(id, { data })\n        }\n      }\n\n      getJobState = () => ({\n        completed: this.state.completed,\n        error: this.state.error,\n        data: this.state.data,\n      })\n\n      render() {\n        const { data, error, completed } = this.state\n\n        if (onlyUseWrappedComponent) {\n          return <WrappedComponent {...this.props} jobState={this.state} />\n        }\n\n        if (error) {\n          return ErrorComponent ? (\n            <ErrorComponent {...this.props} error={error} />\n          ) : null\n        }\n\n        if (!completed) {\n          return LoadingComponent ? <LoadingComponent {...this.props} /> : null\n        }\n\n        return <WrappedComponent {...this.props} jobResult={data} />\n      }\n    }\n\n    return ComponentWithJob\n  }\n}\n","export default function createJobContext() {\n  let idPointer = 0\n  const jobs = {}\n  return {\n    getNextId: () => {\n      idPointer += 1\n      return idPointer\n    },\n    resetIds: () => {\n      idPointer = 0\n    },\n    register: (jobID, result) => {\n      jobs[jobID] = result\n    },\n    get: jobID => jobs[jobID],\n    getState: () => ({ jobs }),\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport createJobContext from './createJobContext'\n\nclass JobProvider extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    jobContext: PropTypes.shape({\n      getNextId: PropTypes.func.isRequired,\n      resetIds: PropTypes.func.isRequired,\n      register: PropTypes.func.isRequired,\n      get: PropTypes.func.isRequired,\n      getState: PropTypes.func.isRequired,\n    }),\n    rehydrateState: PropTypes.shape({\n      jobs: PropTypes.object.isRequired,\n    }),\n  }\n\n  static defaultProps = {\n    jobContext: null,\n    rehydrateState: {\n      jobs: {},\n    },\n  }\n\n  static childContextTypes = {\n    jobs: PropTypes.shape({\n      getNextId: PropTypes.func.isRequired,\n      register: PropTypes.func.isRequired,\n      get: PropTypes.func.isRequired,\n      getRehydrate: PropTypes.func.isRequired,\n      removeRehydrate: PropTypes.func.isRequired,\n    }).isRequired,\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    // This is a workaround because each element instance of a job needs its\n    // own ids.  So between the bootstrapping and the render we need to reset\n    // the id counter to ensure the ids will match.\n    if (props.jobContext) {\n      props.jobContext.resetIds()\n    }\n  }\n\n  componentWillMount() {\n    this.jobContext = this.props.jobContext || createJobContext()\n    this.rehydrateState = this.props.rehydrateState\n  }\n\n  getChildContext() {\n    return {\n      jobs: {\n        getNextId: this.jobContext.getNextId,\n        register: this.jobContext.register,\n        get: this.jobContext.get,\n        getRehydrate: id => this.rehydrateState.jobs[id],\n        removeRehydrate: id => {\n          delete this.rehydrateState.jobs[id]\n        },\n      },\n    }\n  }\n\n  render() {\n    return React.Children.only(this.props.children)\n  }\n}\n\nexport default JobProvider\n"],"names":["getDisplayName","WrappedComponent","displayName","name","isPromise","x","then","propsWithoutInternal","jobInitState","props","onJobProcessed","rest","validSSRModes","neverWorkAgain","withJob","config","Error","work","LoadingComponent","ErrorComponent","serverMode","shouldWorkAgain","onlyUseWrappedComponent","indexOf","env","window","wrapWithJob","id","ComponentWithJob","context","jobs","getNextId","resolveWork","result","getRehydrate","get","setState","data","state","completed","removeRehydrate","unmounted","nextProps","nextContext","store","intl","getJobState","error","React","Component","contextTypes","PropTypes","shape","func","isRequired","object","workDefinition","undefined","setJobContext","catch","warn","register","createJobContext","idPointer","jobID","JobProvider","jobContext","resetIds","rehydrateState","Children","only","children","propTypes","node","defaultProps","childContextTypes"],"mappings":"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"}