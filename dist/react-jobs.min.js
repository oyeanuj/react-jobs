'use strict'
function _interopDefault(e) {
  return e && 'object' == typeof e && 'default' in e ? e.default : e
}
Object.defineProperty(exports, '__esModule', { value: !0 })
var React = require('react'),
  React__default = _interopDefault(React),
  PropTypes = _interopDefault(require('prop-types')),
  _typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function(e) {
          return typeof e
        }
      : function(e) {
          return e &&
            'function' == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? 'symbol'
            : typeof e
        },
  classCallCheck = function(e, t) {
    if (!(e instanceof t))
      throw new TypeError('Cannot call a class as a function')
  },
  createClass = (function() {
    function r(e, t) {
      for (var o = 0; o < t.length; o++) {
        var r = t[o]
        ;(r.enumerable = r.enumerable || !1),
          (r.configurable = !0),
          'value' in r && (r.writable = !0),
          Object.defineProperty(e, r.key, r)
      }
    }
    return function(e, t, o) {
      return t && r(e.prototype, t), o && r(e, o), e
    }
  })(),
  _extends =
    Object.assign ||
    function(e) {
      for (var t = 1; t < arguments.length; t++) {
        var o = arguments[t]
        for (var r in o)
          Object.prototype.hasOwnProperty.call(o, r) && (e[r] = o[r])
      }
      return e
    },
  inherits = function(e, t) {
    if ('function' != typeof t && null !== t)
      throw new TypeError(
        'Super expression must either be null or a function, not ' + typeof t,
      )
    ;(e.prototype = Object.create(t && t.prototype, {
      constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 },
    })),
      t &&
        (Object.setPrototypeOf
          ? Object.setPrototypeOf(e, t)
          : (e.__proto__ = t))
  },
  objectWithoutProperties = function(e, t) {
    var o = {}
    for (var r in e)
      0 <= t.indexOf(r) ||
        (Object.prototype.hasOwnProperty.call(e, r) && (o[r] = e[r]))
    return o
  },
  possibleConstructorReturn = function(e, t) {
    if (!e)
      throw new ReferenceError(
        "this hasn't been initialised - super() hasn't been called",
      )
    return !t || ('object' != typeof t && 'function' != typeof t) ? e : t
  }
function getDisplayName(e) {
  return e.displayName || e.name || 'Component'
}
var isPromise = function(e) {
    return (
      'object' === (void 0 === e ? 'undefined' : _typeof(e)) &&
      'function' == typeof e.then
    )
  },
  propsWithoutInternal = function(e) {
    e.jobInitState, e.onJobProcessed
    return objectWithoutProperties(e, ['jobInitState', 'onJobProcessed'])
  },
  validSSRModes = ['resolve', 'defer', 'boundary'],
  neverWorkAgain = function() {
    return !1
  }
function withJob(e) {
  if ('object' !== (void 0 === e ? 'undefined' : _typeof(e)))
    throw new Error('You must provide a config object to withJob')
  var u = e.work,
    a = e.LoadingComponent,
    c = e.ErrorComponent,
    t = e.serverMode,
    o = void 0 === t ? 'resolve' : t,
    r = e.shouldWorkAgain,
    p = void 0 === r ? neverWorkAgain : r,
    n = e.onlyUseWrappedComponent,
    l = void 0 !== n && n
  if ('function' != typeof u)
    throw new Error('You must provide a work function to withJob')
  if (-1 === validSSRModes.indexOf(o))
    throw new Error('Invalid serverMode provided to asyncComponent')
  var d = 'undefined' == typeof window ? 'node' : 'browser'
  return function(n) {
    var s = void 0,
      e = (function(e) {
        function r(e, t) {
          classCallCheck(this, r)
          var o = possibleConstructorReturn(
            this,
            (r.__proto__ || Object.getPrototypeOf(r)).call(this, e, t),
          )
          return i.call(o), t.jobs && (s = t.jobs.getNextId()), o
        }
        return (
          inherits(r, e),
          createClass(r, [
            {
              key: 'bootstrap',
              value: function() {
                return (
                  'browser' === d ||
                  ('defer' !== o && this.resolveWork(this.props))
                )
              },
            },
            {
              key: 'componentWillMount',
              value: function() {
                var e = void 0
                this.context.jobs &&
                  (e =
                    'browser' === d
                      ? this.context.jobs.getRehydrate(s)
                      : this.context.jobs.get(s)),
                  this.setState({
                    data: e ? e.data : null,
                    error: null,
                    completed: null != e,
                  })
              },
            },
            {
              key: 'componentDidMount',
              value: function() {
                this.state.completed || this.resolveWork(this.props),
                  this.context.jobs &&
                    'browser' === d &&
                    this.context.jobs.removeRehydrate(s)
              },
            },
            {
              key: 'componentWillUnmount',
              value: function() {
                this.unmounted = !0
              },
            },
            {
              key: 'componentWillReceiveProps',
              value: function(e, t) {
                var o = this.context,
                  r = o.store,
                  n = o.intl
                p(
                  propsWithoutInternal(this.props),
                  propsWithoutInternal(e),
                  this.getJobState(),
                  { store: r, intl: n },
                  { store: t.store, intl: t.intl },
                ) && this.resolveWork(e)
              },
            },
            {
              key: 'render',
              value: function() {
                var e = this.state,
                  t = e.data,
                  o = e.error,
                  r = e.completed
                return l
                  ? React__default.createElement(
                      n,
                      _extends({}, this.props, { jobState: this.state }),
                    )
                  : o
                    ? c
                      ? React__default.createElement(
                          c,
                          _extends({}, this.props, { error: o }),
                        )
                      : null
                    : r
                      ? React__default.createElement(
                          n,
                          _extends({}, this.props, { jobResult: t }),
                        )
                      : a
                        ? React__default.createElement(a, this.props)
                        : null
              },
            },
          ]),
          r
        )
      })(React.Component)
    ;(e.displayName = 'WithJob(' + getDisplayName(n) + ')'),
      (e.contextTypes = {
        jobs: PropTypes.shape({
          getNextId: PropTypes.func.isRequired,
          register: PropTypes.func.isRequired,
          get: PropTypes.func.isRequired,
          getRehydrate: PropTypes.func.isRequired,
          removeRehydrate: PropTypes.func.isRequired,
        }),
        store: PropTypes.object,
        intl: PropTypes.object,
      })
    var i = function() {
      var i = this
      ;(this.resolveWork = function(e) {
        var t = void 0
        i.setState({ completed: !1, data: null, error: null })
        var o = i.context,
          r = o.store,
          n = o.intl
        try {
          t = u(e, { store: r, intl: n })
        } catch (e) {
          return i.setState({ completed: !0, error: e }), !1
        }
        return isPromise(t)
          ? t
              .then(function(e) {
                if (!i.unmounted)
                  return (
                    i.setState({ completed: !0, data: e }),
                    i.setJobContext(e),
                    !0
                  )
              })
              .catch(function(e) {
                if (!i.unmounted)
                  return (
                    'browser' === d
                      ? setTimeout(function() {
                          i.unmounted || i.setState({ completed: !0, error: e })
                        }, 16)
                      : (console.warn('Failed to resolve job'),
                        console.warn(e)),
                    !1
                  )
              })
          : (i.setJobContext(t),
            i.setState({ completed: !0, data: t, error: null }),
            !0)
      }),
        (this.setJobContext = function(e) {
          i.context.jobs && i.context.jobs.register(s, { data: e })
        }),
        (this.getJobState = function() {
          return {
            completed: i.state.completed,
            error: i.state.error,
            data: i.state.data,
          }
        })
    }
    return e
  }
}
function createJobContext() {
  var e = 0,
    o = {}
  return {
    getNextId: function() {
      return (e += 1)
    },
    resetIds: function() {
      e = 0
    },
    register: function(e, t) {
      o[e] = t
    },
    get: function(e) {
      return o[e]
    },
    getState: function() {
      return { jobs: o }
    },
  }
}
var JobProvider = (function(e) {
  function r(e, t) {
    classCallCheck(this, r)
    var o = possibleConstructorReturn(
      this,
      (r.__proto__ || Object.getPrototypeOf(r)).call(this, e, t),
    )
    return e.jobContext && e.jobContext.resetIds(), o
  }
  return (
    inherits(r, e),
    createClass(r, [
      {
        key: 'componentWillMount',
        value: function() {
          ;(this.jobContext = this.props.jobContext || createJobContext()),
            (this.rehydrateState = this.props.rehydrateState)
        },
      },
      {
        key: 'getChildContext',
        value: function() {
          var t = this
          return {
            jobs: {
              getNextId: this.jobContext.getNextId,
              register: this.jobContext.register,
              get: this.jobContext.get,
              getRehydrate: function(e) {
                return t.rehydrateState.jobs[e]
              },
              removeRehydrate: function(e) {
                delete t.rehydrateState.jobs[e]
              },
            },
          }
        },
      },
      {
        key: 'render',
        value: function() {
          return React__default.Children.only(this.props.children)
        },
      },
    ]),
    r
  )
})(React.Component)
;(JobProvider.propTypes = {
  children: PropTypes.node.isRequired,
  jobContext: PropTypes.shape({
    getNextId: PropTypes.func.isRequired,
    resetIds: PropTypes.func.isRequired,
    register: PropTypes.func.isRequired,
    get: PropTypes.func.isRequired,
    getState: PropTypes.func.isRequired,
  }),
  rehydrateState: PropTypes.shape({ jobs: PropTypes.object.isRequired }),
}),
  (JobProvider.defaultProps = {
    jobContext: null,
    rehydrateState: { jobs: {} },
  }),
  (JobProvider.childContextTypes = {
    jobs: PropTypes.shape({
      getNextId: PropTypes.func.isRequired,
      register: PropTypes.func.isRequired,
      get: PropTypes.func.isRequired,
      getRehydrate: PropTypes.func.isRequired,
      removeRehydrate: PropTypes.func.isRequired,
    }).isRequired,
  }),
  (exports.withJob = withJob),
  (exports.JobProvider = JobProvider),
  (exports.createJobContext = createJobContext)
//# sourceMappingURL=react-jobs.min.js.map
